version: 2.1
orbs:
  scheduled-pipelines: brivu/scheduled-pipelines@dev:<<pipeline.git.revision>>
  orb-tools: circleci/orb-tools@11.5

filters: &filters
  tags:
    only: /.*/

commands:
  delete-schedule:
    parameters:
      circle-token:
        type: env_var_name
        default: CIRCLE_TOKEN
        description: >
          The personal API Token associated with the project.
      schedule-name:
        type: string
        description: >
          The name of project associated with the pipeline.
    steps:
      - run:
          name: Deleting Schedule - << parameters.schedule-name >>
          command: |
            if echo  "${CIRCLE_BUILD_URL}" | grep -E "GitHub|gh" > /dev/null; then
              VCS="gh"
            elif echo  "${CIRCLE_BUILD_URL}" | grep -E "BitBucket|bb" > /dev/null; then
              VCS="bb"
            else
              VCS="circleci"
            fi
            URL="https://circleci.com/api/v2/project/${VCS}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/schedule"
            curl -s --request GET \
              --url "${URL}" \
              --header "Circle-Token: $CIRCLE_TOKEN" > existing_schedules.json

            if jq '.' -c existing_schedules.json | grep "Project not found" > /dev/null; then
              echo "The specified project is not found. Please check the project name vcs type or namespace."
              exit 1
            fi

            if jq ".items[] | .name" existing_schedules.json | grep "<< parameters.schedule-name >>" > /dev/null; then
              SCHEDULE_ID=$(jq -r '.items[] | select( .name == '"\"<< parameters.schedule-name >>\""') | .id' existing_schedules.json)
              
              set -x
              curl -s --request DELETE \
                  --url https://circleci.com/api/v2/schedule/"${SCHEDULE_ID}" \
                  --header "Circle-Token: ${CIRCLE_TOKEN}" > status.json
              set +x 

              jq '.' status.json
            else
              echo "<< parameters.schedule-name >> is not found. Please choose a valid schedule."
            fi

            curl -s --request GET \
              --url "${URL}" \
              --header "Circle-Token: $CIRCLE_TOKEN" > current_schedules.json

            jq '.' current_schedules.json  

workflows:
  test-deploy:
    jobs:
      - scheduled-pipelines/update-schedules:
          name: integration-test
          pre-steps:
            - checkout
            - scheduled-pipelines/update-schedules:
                schedule-path: "./sample/initial-schedules.json"
          schedule-path: "./sample/updated-schedules.json"
          post-steps:
            - delete-schedule:
                schedule-name: Test4
            - delete-schedule:
                schedule-name: Test5
            - delete-schedule:
                schedule-name: Test6
            - run:
                name: Verifying deletion of all schedules.
                command: |
                  if [ -z $(jq -c '.items[]' current_schedules.json) ]; then 
                    exit 0
                  else
                    echo "All schedules should be deleted. Please recheck jobs"
                    exit 1
                  fi
          filters: *filters
      - orb-tools/pack:
          filters: *filters
      - orb-tools/publish:
          orb-name: brivu/scheduled-pipelines
          vcs-type: << pipeline.project.type >>
          pub-type: production
          requires:
            - orb-tools/pack
            - integration-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$/
